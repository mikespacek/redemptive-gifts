/* This file is automatically generated by the Convex CLI. */

import type * as admin from "../admin";
import type * as questions from "../questions";
import type * as results from "../results";
import type * as seed from "../seed";
import type * as submissions from "../submissions";

/**
 * A type describing all of the functions and data available in your Convex
 * backend.
 *
 * This type is used to validate the arguments and return types of your Convex
 * functions.
 */
export type API = {
  admin: {
    authenticate: typeof admin.authenticate;
    createAdminUser: typeof admin.createAdminUser;
  };
  questions: {
    add: typeof questions.add;
    getAll: typeof questions.getAll;
    remove: typeof questions.remove;
    update: typeof questions.update;
  };
  results: {
    getAllForAdmin: typeof results.getAllForAdmin;
    getById: typeof results.getById;
    getByUser: typeof results.getByUser;
    getMostRecentByUser: typeof results.getMostRecentByUser;
    getStatistics: typeof results.getStatistics;
  };
  seed: {
    seedAdmin: typeof seed.seedAdmin;
    seedQuestions: typeof seed.seedQuestions;
  };
  submissions: {
    completeSubmission: typeof submissions.completeSubmission;
    getById: typeof submissions.getById;
    getByUser: typeof submissions.getByUser;
    saveAnswer: typeof submissions.saveAnswer;
    startSubmission: typeof submissions.startSubmission;
  };
};

/**
 * A utility for referencing Convex functions in your app's API.
 *
 * @example
 * ```ts
 * const myFunctionReference = api.myModule.myFunction;
 * ```
 */
export const api = {
  admin: {
    authenticate: "admin:authenticate",
    createAdminUser: "admin:createAdminUser",
  },
  questions: {
    add: "questions:add",
    getAll: "questions:getAll",
    remove: "questions:remove",
    update: "questions:update",
  },
  results: {
    getAllForAdmin: "results:getAllForAdmin",
    getById: "results:getById",
    getByUser: "results:getByUser",
    getMostRecentByUser: "results:getMostRecentByUser",
    getStatistics: "results:getStatistics",
  },
  seed: {
    seedAdmin: "seed:seedAdmin",
    seedQuestions: "seed:seedQuestions",
  },
  submissions: {
    completeSubmission: "submissions:completeSubmission",
    getById: "submissions:getById",
    getByUser: "submissions:getByUser",
    saveAnswer: "submissions:saveAnswer",
    startSubmission: "submissions:startSubmission",
  },
}; 